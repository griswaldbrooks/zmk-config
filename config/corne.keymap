/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        to-sc2 {
            bindings = <&to 3>;
            key-positions = <10 34>;
            layers = <0>;
        };

        to-default {
            bindings = <&to 0>;
            key-positions = <10 34>;
            layers = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // ||  Q  |  W  |  E  |  R  |  T    |   |  Y  |  U  |  I  |  O  |  P  ||
            // ||  A  |  S  |  D  |  F  |  G    |   |  H  |  J  |  K  |  L  |  ;  ||
            // ||  Z  |  X  |  C  |  V  |  B    |   |  N  |  M  |  ,  |  .  |  /  ||
            //              | ALT | LWR | LSHFT |   | SPC | RSE | CTRL |

            bindings = <
&trans  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &trans
                      &kp LALT  &mo 1  &kp LSHFT    &kp SPACE  &mo 2  &kp RCTRL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // ||  !  |  %  |  &  |  ~  |  +  |   |  {  |  }  |     |     |     ||
            // ||  @  |  $  |  =  |  `  |  *  |   |  (  |  )  | "|" |     |  '  ||
            // ||  #  |  ^  |     |  _  |  -  |   |  [  |  ]  |     |     |  \  ||
            //              |     |     |     |   | TAB |     | ENT |

            bindings = <
&trans  &kp EXCL  &kp PRCNT  &kp AMPS        &kp TILDE  &kp PLUS     &kp LBRC  &kp RBRC  &trans    &trans  &trans    &trans
&trans  &kp AT    &kp DLLR   &kp EQUAL       &kp GRAVE  &kp STAR     &kp LPAR  &kp RPAR  &kp PIPE  &trans  &kp SQT   &trans
&trans  &kp HASH  &kp CARET  &lt 4 LEFT_GUI  &kp UNDER  &kp MINUS    &kp LBKT  &kp RBKT  &trans    &trans  &kp BSLH  &trans
                             &trans          &trans     &trans       &kp TAB   &trans    &kp RET
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | |     |     |  7  |  8  |   9  |   | HOME | PGDN | PGUP | END |     | |
            // | | ESC |     |  4  |  5  |   6  |   | LFT  | DWN  |  UP  | RGT |  "  | |
            // | |     |  0  |  1  |  2  |   3  |   |      |      |      |     |     | |
            //               | DEL |     | BKSP |   |      |      |      |

            bindings = <
&trans  &trans   &trans  &kp N7   &kp N8  &kp N9      &kp HOME    &kp PAGE_DOWN  &kp PAGE_UP  &kp END     &trans      &trans
&trans  &kp ESC  &trans  &kp N4   &kp N5  &kp N6      &kp LEFT    &kp DOWN       &kp UP       &kp RIGHT   &kp DQT     &trans
&trans  &trans   &kp N0  &kp N1   &kp N2  &kp N3      &bt BT_NXT  &trans         &trans       &bt BT_PRV  &bt BT_CLR  &trans
                         &kp DEL  &trans  &kp BSPC    &trans      &trans         &kp RETURN
            >;
        };

        sc2 {
            bindings = <
&trans  &kp N0  &kp N1  &kp N2  &kp N3  &kp N4    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        super {
            bindings = <
&trans  &trans       &trans  &trans  &trans         &trans                &kp RG(HOME)  &kp RG(PAGE_DOWN)  &kp RG(PAGE_UP)        &kp RG(END)    &trans  &trans
&trans  &kp LG(ESC)  &trans  &trans  &kp LG(GRAVE)  &trans                &kp RG(LEFT)  &kp RG(DOWN)       &kp RG(UP)             &kp RG(RIGHT)  &trans  &trans
&trans  &trans       &trans  &trans  &trans         &trans                &trans        &trans             &trans                 &trans         &trans  &trans
                             &trans  &trans         &kp LG(LEFT_SHIFT)    &kp RG(TAB)   &kp RG(ENTER)      &kp RG(RIGHT_CONTROL)
            >;
        };
    };
};
